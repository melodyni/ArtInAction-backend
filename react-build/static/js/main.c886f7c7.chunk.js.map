{"version":3,"sources":["Icons/logout.svg","Icons/left-arrow.svg","component/requestAPI.js","component/Welcome.js","component/TitleBar.js","component/ImageCard.js","component/AllImageCard.js","component/FilteredImageCard.js","component/Gallery.js","component/ZoomedImage.js","component/InputBox.js","component/RegistrationForm.js","component/AddArtForm.js","Routes/PrivateRoutes.js","Routes/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","reqAPI","fetch","then","res","json","register","userInfo","data","method","headers","body","JSON","stringify","logout","Welcome","useState","url","setLink","useEffect","authUrl","console","log","className","onClick","window","location","href","TitleBar","user","avatar","username","history","useHistory","src","alt","push","ImageCard","title","tags","caption","name","to","map","tag","idx","key","AllImageCard","cards","artWorks","md5","filteredImageCard","filteredArtWork","filter","artWork","includes","Gallery","setArtWorks","setUser","id","email","bio","categories","Array","from","Set","x","flat","links","category","activeClassName","routes","exact","path","FilteredImageCard","ZoomedImage","useParams","back","InputBox","type","onChange","label","value","setValue","event","input","target","required","RegistrationForm","setName","setUserName","setEmail","setBio","onSubmit","e","preventDefault","AddArtForm","setTitle","setCaption","setTags","imageUrl","setImageUrl","FormData","append","htmlFor","image","files","reader","FileReader","onload","result","readAsDataURL","PrivateRoute","Component","component","rest","userId","isLoggedIn","isRegisteredUser","loaded","setLoaded","render","props","App","Routes","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c886f7c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logout.e75855a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow.6468634d.svg\";","const postReq = (url, data) => {\n  return fetch(url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n};\n\nconst reqAPI = {};\n\nreqAPI.authUrl = () => fetch(`/auth/init`).then((res) => res.json());\nreqAPI.artWork = () => fetch(`/api/artWork`).then((res) => res.json());\nreqAPI.isLoggedIn = () => fetch(`/api/isLoggedIn`).then((res) => res.json());\nreqAPI.register = (userInfo) => postReq(`/api/registerUser`, userInfo);\nreqAPI.logout = () => fetch(`/api/logout`);\nexport default reqAPI;\n","import React, { useState, useEffect } from 'react';\nimport reqAPI from './requestAPI';\nimport '../App.css';\n\nconst Welcome = function () {\n  const [url, setLink] = useState('');\n  useEffect(() => {\n    reqAPI.authUrl().then(({ url }) => setLink(url));\n  }, []);\n\n  console.log(url);\n\n  return (\n    <div className='welcome '>\n      <h1>Art in Action</h1>\n      <h2>Imagination is the beginning of creation.</h2>\n      <h3>Keep being Artistic</h3>\n      <button onClick={() => (window.location.href = url)} className='btn blue'>\n        Login With Google\n      </button>\n    </div>\n  );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport reqAPI from './requestAPI';\nimport logout from '../Icons/logout.svg';\nimport '../App.css';\nimport { useHistory } from 'react-router-dom';\n\nconst TitleBar = function ({ user }) {\n  const { avatar, username } = user;\n  const history = useHistory();\n\n  const handleClick = () => {\n    reqAPI.logout().then(() => history.push('/login'));\n  };\n\n  return (\n    <div className='inline titleBar'>\n      <span className='large-font'>Art In Action</span>\n      <div className='user'>\n        <span className='large-font'>{username}</span>\n        <img src={avatar} alt='avatar' className='avatar' />\n        <img src={logout} alt='logout' className='icon' onClick={handleClick} />\n      </div>\n    </div>\n  );\n};\n\nexport default TitleBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\n\nconst ImageCard = function ({ title, tags, caption, name }) {\n  return (\n    <div className='img-card'>\n      <Link to={`/image/${name}/${title}`}>\n        <img src={`/api/images/${name}`} alt={name} className='img-card-img' />\n      </Link>\n      <div>\n        <div className='small-font'>{title}</div>\n        <div className='small-font'>{caption}</div>\n        {tags.map((tag, idx) => (\n          <Link to={`/gallery/${tag}`} key={idx} className='small-font'>\n            {'#' + tag}\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageCard;\n","import React from 'react';\nimport ImageCard from './ImageCard';\nimport '../App.css';\n\nconst AllImageCard = function ({ artWorks }) {\n  const cards = artWorks.map(({ md5, name, caption, tags, title }) => (\n    <ImageCard\n      key={md5}\n      name={name}\n      caption={caption}\n      tags={tags}\n      title={title}\n    />\n  ));\n  return <div className='flex-wrap'>{cards}</div>;\n};\n\nexport default AllImageCard;\n","import React from 'react';\nimport AllImageCard from './AllImageCard';\nimport '../App.css';\n\nconst filteredImageCard = function ({ artWorks, tag }) {\n  const filteredArtWork = artWorks.filter((artWork) =>\n    artWork.tags.includes(tag)\n  );\n  return <AllImageCard artWorks={filteredArtWork} />;\n};\n\nexport default filteredImageCard;\n","import React, { useState, useEffect } from 'react';\nimport TitleBar from './TitleBar';\nimport { NavLink, Route, Switch, useHistory } from 'react-router-dom';\n\nimport AllImageCard from './AllImageCard';\nimport FilteredImageCard from './FilteredImageCard';\nimport reqAPI from './requestAPI';\nimport '../App.css';\n\nconst Gallery = function () {\n  const history = useHistory();\n  const [artWorks, setArtWorks] = useState([]);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    reqAPI\n      .artWork()\n      .then(({ id, name, username, avatar, email, bio, artWorks }) => {\n        setUser({ id, username, name, avatar, email, bio });\n        setArtWorks(artWorks);\n      });\n  }, []);\n\n  const categories = Array.from(new Set(artWorks.map((x) => x.tags).flat()));\n\n  const links = categories.map((category) => (\n    <NavLink\n      to={`/gallery/${category}`}\n      key={category}\n      activeClassName='activeLink'\n    >\n      {category}\n    </NavLink>\n  ));\n\n  const routes = categories.map((category) => (\n    <Route exact path={`/gallery/${category}`} key={category}>\n      <FilteredImageCard artWorks={artWorks} tag={category} />\n    </Route>\n  ));\n\n  return (\n    <div>\n      <TitleBar user={user} />\n      <div className='inline'>\n        <div className='links'>\n          <NavLink to='/gallery/all' activeClassName='activeLink'>\n            all\n          </NavLink>\n          {links}\n        </div>\n        <button className='btn blue' onClick={() => history.push('/addArt')}>\n          Add Art\n        </button>\n      </div>\n\n      <Switch>\n        <Route exact path='/gallery/all'>\n          <AllImageCard artWorks={artWorks} />\n        </Route>\n        {routes}\n      </Switch>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport '../App.css';\nimport back from '../Icons/left-arrow.svg';\n\nconst ZoomedImage = function () {\n  const history = useHistory();\n  const { name, title } = useParams();\n  return (\n    <div>\n      <img\n        src={back}\n        alt='ZoomedImage'\n        className='icon'\n        onClick={() => history.push('/gallery/all')}\n      />\n      <div className='zoomed-img'>\n        <div className='side-panel '>{title}</div>\n        <img src={`/api/images/${name}`} alt={name} />\n      </div>\n    </div>\n  );\n};\n\nexport default ZoomedImage;\n","import React, { useState } from 'react';\n\nconst InputBox = ({ type, onChange, label }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    const input = event.target.value;\n    setValue(input);\n    onChange(input);\n  };\n\n  return (\n    <div>\n      <label>{label}</label>\n      <div>\n        <input onChange={handleChange} type={type} value={value} required />\n      </div>\n    </div>\n  );\n};\n\nexport default InputBox;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport reqAPI from './requestAPI';\nimport InputBox from './InputBox';\n\nconst RegistrationForm = () => {\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [username, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [bio, setBio] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    reqAPI\n      .register({ name, username, email, bio })\n      .then(() => history.push('/gallery/all'));\n  };\n\n  return (\n    <div className='border'>\n      <form onSubmit={handleSubmit}>\n        <InputBox type='text' label='Name' onChange={setName} />\n        <InputBox type='text' label='UserName' onChange={setUserName} />\n        <InputBox type='email' label='Email' onChange={setEmail} />\n        <label>Bio</label>\n        <br />\n        <textarea\n          value={bio}\n          onChange={(e) => setBio(e.target.value)}\n          required\n        />\n        <br />\n        <button type='submit' className='btn blue'>\n          Submit\n        </button>\n        <button className='btn red'>Cancel</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import React, { useState } from 'react';\nimport InputBox from './InputBox';\nimport { useHistory } from 'react-router-dom';\n\nconst AddArtForm = () => {\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [caption, setCaption] = useState('');\n  const [tags, setTags] = useState([]);\n  const [imageUrl, setImageUrl] = useState(null);\n\n  const handleChange = (e) => {\n    const [image] = e.target.files;\n    const reader = new FileReader();\n    reader.onload = () => {\n      setImageUrl(`${reader.result}`);\n    };\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    data.append('title', title);\n    data.append('caption', caption);\n    data.append('tags', tags);\n    fetch('api/saveArt', {\n      method: 'POST',\n      body: data,\n    }).then(() => history.push(`/gallery/all`));\n  };\n\n  return (\n    <div className='border'>\n      <div className='preview'>\n        <img src={imageUrl} alt='preview' />\n      </div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor='img'>Image</label>\n        <input\n          id='img'\n          type='file'\n          name='image'\n          onChange={handleChange}\n          required\n        />\n        <br />\n        <InputBox type='text' label='Title' onChange={setTitle} />\n        <InputBox type='text' label='Tags' onChange={setTags} />\n        <InputBox type='text' label='Caption' onChange={setCaption} />\n\n        <br />\n        <button type='submit' className='btn blue'>\n          Submit\n        </button>\n        <button className='btn red'>Cancel</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddArtForm;\n","import React, { useEffect, useState } from 'react';\nimport reqAPI from '../component/requestAPI';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [user, setUser] = useState({\n    userId: null,\n    isLoggedIn: false,\n    isRegisteredUser: false,\n  });\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    reqAPI\n      .isLoggedIn()\n      .then(setUser)\n      .then(() => setLoaded(true));\n  }, []);\n\n  if (loaded) {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          !user.isLoggedIn ? (\n            <Redirect to='/login' />\n          ) : !user.isRegisteredUser ? (\n            <Redirect to='/register' />\n          ) : (\n            <Component {...props} user={user} />\n          )\n        }\n      ></Route>\n    );\n  }\n  return <p>Loading...</p>;\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport Welcome from '../component/Welcome';\nimport Gallery from '../component/Gallery';\nimport ZoomedImage from '../component/ZoomedImage';\nimport RegistrationForm from '../component/RegistrationForm';\nimport AddArtForm from '../component/AddArtForm';\nimport PrivateRoute from '../Routes/PrivateRoutes';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <PrivateRoute exact path='/' component={Gallery} />\n        <Route exact path='/login' component={Welcome} />\n        <Route path='/register' component={RegistrationForm} />\n        <Route exact path='/addArt' component={AddArtForm} />\n        <PrivateRoute path='/gallery/:category' component={Gallery} />\n        <Route path='/image/:name/:title' component={ZoomedImage} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport Routes from './Routes/Routes';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}